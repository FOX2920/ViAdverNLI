"use client"

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import {
  BarChart,
  Bar,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
  PieChart,
  Pie,
  Cell,
} from "recharts"
import {
  Brain,
  Database,
  TrendingUp,
  Shield,
  Target,
  BookOpen,
  Award,
  CheckCircle,
  AlertTriangle,
  XCircle,
} from "lucide-react"

import { roundsData, COLORS } from "@/data/rounds-data"
import { datasetComparison, viadvernliHighlights } from "@/data/dataset-data"
import { getDifficultyColor } from "@/utils/chart-utils"

export function OverviewTab() {
  return (
    <div className="space-y-6">
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <Card className="border-l-4 border-l-blue-500">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <BookOpen className="w-5 h-5" />
              M·ª•c ti√™u D·ª± √°n
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">
              X√¢y d·ª±ng b·ªô d·ªØ li·ªáu ƒë·ªëi kh√°ng ti·∫øng Vi·ªát cho fact-checking, t·∫°o ra c√°c claim ph·ª©c t·∫°p ƒë·ªÉ th·ª≠ th√°ch
              kh·∫£ nƒÉng c·ªßa m√¥ h√¨nh AI.
            </p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-green-500">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Shield className="w-5 h-5" />
              Ph∆∞∆°ng ph√°p ƒê·ªëi kh√°ng
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">
              S·ª≠ d·ª•ng 3 rounds v·ªõi m√¥ h√¨nh ng√†y c√†ng m·∫°nh (mBERT ‚Üí PhoBERT ‚Üí XLM-R) ƒë·ªÉ t·∫°o d·ªØ li·ªáu c√≥ ƒë·ªô kh√≥ tƒÉng
              d·∫ßn.
            </p>
          </CardContent>
        </Card>

        <Card className="border-l-4 border-l-purple-500">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Award className="w-5 h-5" />
              K·∫øt qu·∫£ ƒê·∫°t ƒë∆∞·ª£c
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-sm text-gray-600">
                              T·∫°o th√†nh c√¥ng 21,262 m·∫´u d·ªØ li·ªáu ƒë·ªëi kh√°ng ch·∫•t l∆∞·ª£ng cao v·ªõi 2/3 rounds ƒë·∫°t Fleiss' Kappa &gt; 0.80 
                (ƒë·ªìng thu·∫≠n xu·∫•t s·∫Øc).
            </p>
          </CardContent>
        </Card>
      </div>

      {/* Dataset Comparison */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Target className="w-5 h-5" />
            So s√°nh v·ªõi c√°c Dataset NLI/Fact-checking Ti·∫øng Vi·ªát
          </CardTitle>
          <CardDescription>
            V·ªã tr√≠ c·ªßa ViAdverNLI trong h·ªá sinh th√°i c√°c b·ªô d·ªØ li·ªáu NLI v√† fact-checking ti·∫øng Vi·ªát
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <table className="w-full text-sm border-collapse border border-gray-300">
              <thead>
                <tr className="bg-gray-100">
                  <th className="border border-gray-300 p-3 text-left min-w-[120px]">Dataset</th>
                  <th className="border border-gray-300 p-3 text-center">M√¥ t·∫£</th>
                  <th className="border border-gray-300 p-3 text-center">S·ªë m·∫´u</th>
                  <th className="border border-gray-300 p-3 text-center">Lo·∫°i d·ªØ li·ªáu</th>
                  <th className="border border-gray-300 p-3 text-center">ƒê·ªô d√†i text</th>
                  <th className="border border-gray-300 p-3 text-center">Ph∆∞∆°ng ph√°p</th>
                  <th className="border border-gray-300 p-3 text-center">SOTA Accuracy</th>
                </tr>
              </thead>
              <tbody>
                {datasetComparison.map((dataset, index) => (
                  <tr key={index} className={index % 2 === 0 ? "bg-white" : "bg-gray-50"}>
                    <td className="border border-gray-300 p-3">
                      <div className={`p-2 rounded border ${dataset.color}`}>
                        <div className="font-bold">{dataset.name}</div>
                        <div className="text-xs mt-1">{dataset.highlight}</div>
                      </div>
                    </td>
                    <td className="border border-gray-300 p-3 text-center">{dataset.description}</td>
                    <td className="border border-gray-300 p-3 text-center font-medium">{dataset.samples}</td>
                    <td className="border border-gray-300 p-3 text-center">{dataset.dataType}</td>
                    <td className="border border-gray-300 p-3 text-center text-xs">{dataset.textLength}</td>
                    <td className="border border-gray-300 p-3 text-center">{dataset.method}</td>
                    <td className="border border-gray-300 p-3 text-center">
                      <span className={`font-bold ${dataset.name.includes('ViAdverNLI') ? 'text-red-600' : 'text-green-600'}`}>
                        {dataset.accuracy}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </CardContent>
      </Card>

      {/* ViAdverNLI Unique Features */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Award className="w-5 h-5" />
            ƒê·∫∑c ƒëi·ªÉm N·ªïi b·∫≠t c·ªßa ViAdverNLI
          </CardTitle>
          <CardDescription>
            Nh·ªØng y·∫øu t·ªë ƒë·ªôc ƒë√°o khi·∫øn ViAdverNLI tr·ªü th√†nh benchmark th·ª≠ th√°ch cho NLI ti·∫øng Vi·ªát
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {viadvernliHighlights.map((highlight, index) => (
              <Card key={index} className="border-l-4 border-l-blue-500">
                <CardContent className="p-4">
                  <div className="flex items-start gap-3">
                    <div className="text-2xl">{highlight.icon}</div>
                    <div className="flex-1">
                      <h4 className="font-bold text-sm mb-2">{highlight.title}</h4>
                      <p className="text-xs text-gray-600 mb-2">{highlight.description}</p>
                      <Badge variant="outline" className="text-xs">
                        {highlight.impact}
                      </Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Accuracy Comparison Chart */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <TrendingUp className="w-5 h-5" />
            So s√°nh ƒê·ªô kh√≥ qua SOTA Accuracy
          </CardTitle>
          <CardDescription>
            ViAdverNLI l√† dataset kh√≥ nh·∫•t, th·ª≠ th√°ch kh·∫£ nƒÉng suy lu·∫≠n c·ªßa m√¥ h√¨nh AI
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <div>
              <ResponsiveContainer width="100%" height={300}>
                <BarChart 
                  data={datasetComparison.map(d => ({
                    name: d.name.split(' ')[0],
                    accuracy: parseFloat(d.accuracy.replace(/[^0-9.]/g, '')),
                    samples: parseInt(d.samples.replace(/[^0-9]/g, '')) / 1000
                  }))}
                  margin={{ top: 20, right: 30, left: 20, bottom: 5 }}
                >
                  <CartesianGrid strokeDasharray="3 3" />
                  <XAxis dataKey="name" />
                  <YAxis domain={[40, 90]} />
                  <Tooltip formatter={(value, name) => [value + '%', 'SOTA Accuracy']} />
                  <Bar dataKey="accuracy" fill="#ef4444" />
                </BarChart>
              </ResponsiveContainer>
            </div>

            <div className="space-y-4">
              <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                <h4 className="font-bold text-red-800 mb-2">üéØ ViAdverNLI: Th·ª≠ th√°ch kh√≥ nh·∫•t</h4>
                <ul className="text-sm text-red-700 space-y-1">
                  <li>‚Ä¢ <strong>58% SOTA accuracy</strong> - th·∫•p nh·∫•t trong t·∫•t c·∫£</li>
                  <li>‚Ä¢ <strong>26% gap</strong> so v·ªõi dataset d·ªÖ nh·∫•t (ISE-DSC01: 84%)</li>
                  <li>‚Ä¢ <strong>Adversarial design</strong> - g√¢y kh√≥ cho m√¥ h√¨nh SOTA</li>
                  <li>‚Ä¢ <strong>Human-in-the-loop</strong> - claims ƒë∆∞·ª£c crafted ƒë·ªÉ ƒë√°nh l·ª´a AI</li>
                </ul>
              </div>

              <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <h4 className="font-bold text-blue-800 mb-2">üìä Ranking ƒë·ªô kh√≥:</h4>
                <ol className="text-sm text-blue-700 space-y-1">
                  <li><strong>1. ViAdverNLI (58%)</strong> - C·ª±c kh√≥ üî¥</li>
                  <li><strong>2. ViFactCheck (62%)</strong> - Kh√≥ üü°</li> 
                  <li><strong>3. ViNLI (79%)</strong> - Trung b√¨nh üü¢</li>
                  <li><strong>4. ViWikiFC (79%)</strong> - Trung b√¨nh üü¢</li>
                  <li><strong>5. ISE-DSC01 (84%)</strong> - D·ªÖ üü¢</li>
                </ol>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Process Flow */}
      <Card>
        <CardHeader>
          <CardTitle>Quy tr√¨nh T·∫°o D·ªØ li·ªáu ƒê·ªëi kh√°ng</CardTitle>
          <CardDescription>
            M·ªói round s·ª≠ d·ª•ng m√¥ h√¨nh m·∫°nh h∆°n ƒë·ªÉ t·∫°o claim ƒë·ªëi kh√°ng ph·ª©c t·∫°p h∆°n
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {roundsData.map((round, index) => (
              <div key={round.round} className="relative">
                <Card className="h-full">
                  <CardHeader>
                    <div className="flex items-center justify-between">
                      <CardTitle className="text-lg">{round.round}</CardTitle>
                      <Badge className={getDifficultyColor(round.difficulty)}>{round.difficulty}</Badge>
                    </div>
                    <CardDescription>{round.model}</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-3">
                    <div>
                      <p className="text-sm font-medium">D·ªØ li·ªáu hu·∫•n luy·ªán:</p>
                      <p className="text-xs text-gray-600">{round.trainingData}</p>
                    </div>
                    <div>
                      <p className="text-sm font-medium">S·ªë m·∫´u: {round.samples.toLocaleString()}</p>
                      <p className="text-sm font-medium">Kappa: {round.kappa}</p>
                    </div>
                  </CardContent>
                </Card>
                {index < roundsData.length - 1 && (
                  <div className="hidden md:block absolute top-1/2 -right-3 transform -translate-y-1/2">
                    <div className="w-6 h-0.5 bg-gray-300"></div>
                    <div className="w-0 h-0 border-l-4 border-l-gray-300 border-t-2 border-t-transparent border-b-2 border-b-transparent ml-6 -mt-1"></div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Detailed Round Analysis */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {roundsData.map((round) => (
          <Card key={round.round}>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                {round.round === "R1" && <CheckCircle className="w-5 h-5 text-green-500" />}
                {round.round === "R2" && <AlertTriangle className="w-5 h-5 text-yellow-500" />}
                {round.round === "R3" && <XCircle className="w-5 h-5 text-red-500" />}
                ViAdverNLI {round.round}
              </CardTitle>
              <CardDescription>{round.samples.toLocaleString()} m·∫´u</CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <div className="flex justify-between text-sm">
                  <span>SUPPORTED</span>
                  <span>{round.supported}%</span>
                </div>
                <Progress value={round.supported} className="h-2" />
              </div>
              <div>
                <div className="flex justify-between text-sm">
                  <span>REFUTED</span>
                  <span>{round.refuted}%</span>
                </div>
                <Progress value={round.refuted} className="h-2" />
              </div>
              <div>
                <div className="flex justify-between text-sm">
                  <span>NEI</span>
                  <span>{round.nei}%</span>
                </div>
                <Progress value={round.nei} className="h-2" />
              </div>
              <div className="pt-2 border-t">
                <p className="text-sm">
                  <strong>M√¥ h√¨nh:</strong> {round.model}
                </p>
                <p className="text-sm">
                  <strong>Fleiss' Kappa:</strong> {round.kappa}
                </p>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  )
} 